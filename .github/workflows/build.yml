name: Build Marlin

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#example-adding-configurations
    strategy:
      fail-fast: false
      matrix:
        include:
          - configuration: Creality/Ender-2
            ref: refs/tags/2.1
            environment: melzi_optiboot_optimized
          - configuration: Creality/Ender-2 Pro/CrealityV423
            ref: refs/tags/2.1
            environment: STM32F103RE_creality
          - configuration: Creality/Ender-3/CrealityV1
            ref: refs/tags/2.1
            environment: melzi_optiboot_optimized
            
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup PlatformIO
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      # Checkout
      - name: Checkout
        uses: actions/checkout@v3
      # Clone Marlin
      - name: Clone Marlin source
        uses: actions/checkout@v3
        with:
          repository: MarlinFirmware/Marlin
          ref: ${{ matrix.ref }}
          path: marlin/Marlin
      # Clone Marlin Configurations
      - name: Clone Marlin configurations
        uses: actions/checkout@v3
        with:
          repository: MarlinFirmware/Configurations
          ref: ${{ matrix.ref }}
          path: marlin/Configurations
      # Configure
      - name: Apply Marlin configuration
        run: cp "marlin/Configurations/config/examples/${{ matrix.configuration }}/"* marlin/Marlin/Marlin/
      # Customize
      - name: Apply Marlin customizations
        run: |
             if [ -e "customization/configuration/${{ matrix.configuration }}" ] ; then
               echo "Applying customization for configuration ${{ matrix.configuration }}"
               bash -ex "customization/configuration/${{ matrix.configuration }}"
             fi
      # Build
      - name: Run PlatformIO
        run: |
             cd marlin/Marlin && pio run -e ${{ matrix.environment }}
             NAME=$(echo "${{ matrix.configuration }}_${{ matrix.ref }}" | sed -e 's|/refs/tags||g' | sed -e 's|/|_|g')
             mkdir -p firmware
             cp .pio/build/*/firmware*.bin "firmware/$NAME.bin" || true # for 32-bit firmware
             cp .pio/build/*/firmware*.hex "firmware/$NAME.hex" || true # for 16-bit firmware
             cp Marlin/Configuration.h "firmware/$NAME_Configuration.h"
             cp Marlin/Configuration_adv.h "firmware/$NAME_Configuration_adv.h"

      # Upload build
      - uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: "marlin/Marlin/firmware/*"
